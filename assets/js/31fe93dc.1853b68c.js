"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7023],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return d},MDXProvider:function(){return u},mdx:function(){return h},useMDXComponents:function(){return p},withMDXComponents:function(){return s}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),s=function(e){return function(n){var t=p(n.components);return r.createElement(e,o({},n,{components:t}))}},p=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),s=p(t),u=i,f=s["".concat(a,".").concat(u)]||s[u]||m[u]||o;return t?r.createElement(f,l(l({ref:n},d),{},{components:t})):r.createElement(f,l({ref:n},d))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},95673:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r,i=t(83117),o=t(80102),a=(t(67294),t(3905)),l=["components"],c={id:"haskell",title:"Haskell",sidebar_label:"Haskell"},d=void 0,s={unversionedId:"indexer/haskell",id:"indexer/haskell",title:"Haskell",description:"To index Haskell Glean consumes .hie files produced by the GHC compiler (>=8.8) with the flag -fwrite-ide-info.",source:"@site/docs/indexer/haskell.md",sourceDirName:"indexer",slug:"/indexer/haskell",permalink:"/docs/indexer/haskell",draft:!1,editUrl:"https://github.com/facebookincubator/Glean/tree/main/glean/website/docs/indexer/haskell.md",tags:[],version:"current",frontMatter:{id:"haskell",title:"Haskell",sidebar_label:"Haskell"},sidebar:"someSidebar",previous:{title:"Hack",permalink:"/docs/indexer/hack"},next:{title:"TypeScript",permalink:"/docs/indexer/lsif-typescript"}},p={},u=[{value:"Schema",id:"schema",level:2}],m=(r="SrcFile",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)}),f={toc:u};function h(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.mdx)("wrapper",(0,i.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"To index ",(0,a.mdx)("a",{parentName:"p",href:"https://haskell.org"},"Haskell")," Glean consumes ",(0,a.mdx)("inlineCode",{parentName:"p"},".hie")," files produced by the GHC compiler (>=8.8) with the flag ",(0,a.mdx)("inlineCode",{parentName:"p"},"-fwrite-ide-info"),"."),(0,a.mdx)("h1",{id:"run-the-indexer"},"Run the indexer"),(0,a.mdx)("p",null,"The indexer is run via the main ",(0,a.mdx)("inlineCode",{parentName:"p"},"glean")," CLI tool."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"BUILD --ghc-options=-fwrite-ide-info\nglean --db-root DBDIR index haskell ROOT --db NAME/INSTANCE\n")),(0,a.mdx)("p",null,"where"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"BUILD")," is a build command such that GHC is called with ",(0,a.mdx)("inlineCode",{parentName:"li"},"-fwrite-ide-info")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"DBDIR")," is the directory where the Glean db will be created"),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"ROOT")," is the root directory containing the build artifacts generated with the ",(0,a.mdx)("inlineCode",{parentName:"li"},"fwrite-ide-info")," flag (e.g. ",(0,a.mdx)("inlineCode",{parentName:"li"},"dist")," if a Cabal project)"),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"name/hash")," is the name of the repository to create")),(0,a.mdx)("h2",{id:"schema"},"Schema"),(0,a.mdx)("p",null,"The schema is in ",(0,a.mdx)(m,{file:"glean/schema/source/hs.angle",mdxType:"SrcFile"})))}h.isMDXComponent=!0}}]);